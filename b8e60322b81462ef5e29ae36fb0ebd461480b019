{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a423bc9f_4f877c4f",
        "filename": "fuse/mount_linux_test.go",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-05-31T11:29:11Z",
      "side": 1,
      "message": "Fatal",
      "range": {
        "startLine": 208,
        "startChar": 4,
        "endLine": 208,
        "endChar": 9
      },
      "revId": "b8e60322b81462ef5e29ae36fb0ebd461480b019",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2dcd6ee_7c4fe7f7",
        "filename": "fuse/mount_linux_test.go",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 1021467
      },
      "writtenOn": "2023-05-31T16:45:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a423bc9f_4f877c4f",
      "range": {
        "startLine": 208,
        "startChar": 4,
        "endLine": 208,
        "endChar": 9
      },
      "revId": "b8e60322b81462ef5e29ae36fb0ebd461480b019",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f8fe42a_e9641296",
        "filename": "fuse/mount_linux_test.go",
        "patchSetId": 3
      },
      "lineNbr": 211,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-05-31T11:29:11Z",
      "side": 1,
      "message": "Fatalf",
      "range": {
        "startLine": 211,
        "startChar": 4,
        "endLine": 211,
        "endChar": 10
      },
      "revId": "b8e60322b81462ef5e29ae36fb0ebd461480b019",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c37672a_c1f30b6c",
        "filename": "fuse/mount_linux_test.go",
        "patchSetId": 3
      },
      "lineNbr": 211,
      "author": {
        "id": 1021467
      },
      "writtenOn": "2023-05-31T16:45:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f8fe42a_e9641296",
      "range": {
        "startLine": 211,
        "startChar": 4,
        "endLine": 211,
        "endChar": 10
      },
      "revId": "b8e60322b81462ef5e29ae36fb0ebd461480b019",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b53977e_bd421b46",
        "filename": "fuse/mount_linux_test.go",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-05-31T11:29:11Z",
      "side": 1,
      "message": "nit: I don\u0027t understand why this is called `orig`",
      "range": {
        "startLine": 213,
        "startChar": 1,
        "endLine": 213,
        "endChar": 5
      },
      "revId": "b8e60322b81462ef5e29ae36fb0ebd461480b019",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4ad1354_76dbf38d",
        "filename": "fuse/mount_linux_test.go",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 1021467
      },
      "writtenOn": "2023-05-31T16:45:26Z",
      "side": 1,
      "message": "right, this doesn\u0027t make sense, renamed to \u0027m\u0027 for \u0027mount\u0027",
      "parentUuid": "5b53977e_bd421b46",
      "range": {
        "startLine": 213,
        "startChar": 1,
        "endLine": 213,
        "endChar": 5
      },
      "revId": "b8e60322b81462ef5e29ae36fb0ebd461480b019",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "381efe5f_3cb4df17",
        "filename": "fuse/mount_linux_test.go",
        "patchSetId": 3
      },
      "lineNbr": 215,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-05-31T11:29:11Z",
      "side": 1,
      "message": "order should be got, want.\n\nPrefer short messages, eg. \n\n```\nErrorf(\"mountinfo(%q): got %q want %q\", mnt, orig.Source, fsname)\n```",
      "range": {
        "startLine": 215,
        "startChar": 12,
        "endLine": 215,
        "endChar": 18
      },
      "revId": "b8e60322b81462ef5e29ae36fb0ebd461480b019",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d0eb7b7_65ec75d7",
        "filename": "fuse/mount_linux_test.go",
        "patchSetId": 3
      },
      "lineNbr": 215,
      "author": {
        "id": 1021467
      },
      "writtenOn": "2023-05-31T16:45:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "381efe5f_3cb4df17",
      "range": {
        "startLine": 215,
        "startChar": 12,
        "endLine": 215,
        "endChar": 18
      },
      "revId": "b8e60322b81462ef5e29ae36fb0ebd461480b019",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bcacefb_d47770b2",
        "filename": "fuse/server.go",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-05-31T11:29:11Z",
      "side": 1,
      "message": "what happens if there is \u0027\\\u0027 in the fsname?",
      "revId": "b8e60322b81462ef5e29ae36fb0ebd461480b019",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcf873be_4407cb58",
        "filename": "fuse/server.go",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1021467
      },
      "writtenOn": "2023-05-31T16:33:48Z",
      "side": 1,
      "message": "Good point, perhaps we should also escape it, what do you think?\n\nSomething like\n\n`strings.Replace(strings.Replace(optionValue, \"\\\\\", \"\\\\\\\\\", -1), \",\", \"\\\\,\", -1)`\n\nand we change `escapeComma` to `escapeOption`?\n\n---\n\nOr in greater detail:\n\nWith something like `\"com\\\\mas\"`:\n\nThe \"\\\" disappears, e.g. `{FsName: \"com\\\\mas\"}` appears as \"commas\" in `/proc/mounts`.\n(This was already true before this patch).\n\n\nWith something like \"comm\\\\,as\":\n\nThis currently leads to `fusermount exited with code 256` (\u0027cause an unescaped comma is passed).\n\n\nI think the cleanest solution would be to escape `\\`.\nI wonder if there are any other characters which need to be escaped, but I couldn\u0027t get more out of https://github.com/libfuse/libfuse/blob/7297044ada625da583211f0a574410cddb4f7d8d/util/fusermount.c#L54.",
      "parentUuid": "7bcacefb_d47770b2",
      "revId": "b8e60322b81462ef5e29ae36fb0ebd461480b019",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e27f9e2_4428d09b",
        "filename": "fuse/server.go",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-05-31T18:04:48Z",
      "side": 1,
      "message": "wouldnÂ´t it be `\"comma\\\\\\\\as\"` ? you have 2 levels of escape: one for Go strings, and one for fusermount?",
      "parentUuid": "bcf873be_4407cb58",
      "revId": "b8e60322b81462ef5e29ae36fb0ebd461480b019",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "472fb503_bab90c39",
        "filename": "fuse/server.go",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1021467
      },
      "writtenOn": "2023-05-31T18:31:38Z",
      "side": 1,
      "message": "wait, sorry I don\u0027t understand which part of my answer you are referring to with `\"comma\\\\\\\\as\"`, could you please explain it again?\n\nAll examples I used were meant to be golang strings.\n\nIf I specify `fsname` in new `TestEscapedMountOption` as `\"fsname,wi\\\\th,many,commas,\"` (string, not string literal) with the current state of patch set (patch set 4) tests return:\n\n`mount_linux_test.go:215: mountinfo(\"/tmp/TestEscapedMountOption773328478/001\"): got \"fsname,with,many,commas,\" want \"fsname,wi\\\\th,many,commas,\"`\n\nWhen replacing\n\n`return strings.Replace(optionValue, \",\", \"\\\\,\", -1)`\n\nwith\n\n`return strings.Replace(strings.Replace(optionValue, \"\\\\\", \"\\\\\\\\\", -1), \",\", \"\\\\,\", -1)`\n\nthis error disappears.\n\n(maybe I should use string literals in the inner `Replace`, so it may be less confusing?)",
      "parentUuid": "0e27f9e2_4428d09b",
      "revId": "b8e60322b81462ef5e29ae36fb0ebd461480b019",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}