{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3ee628de_7c9df332",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-01-21T22:01:29Z",
      "side": 1,
      "message": "looks OK, but one question/nit.",
      "revId": "716ca8ae2b27a8206719c9a3b90b903e5c707f17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39295e12_85635fd0",
        "filename": "fuse/opcode.go",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-01-21T22:01:29Z",
      "side": 1,
      "message": "unnecessary? The flags are copied form input at l.98",
      "range": {
        "startLine": 147,
        "startChar": 2,
        "endLine": 147,
        "endChar": 46
      },
      "revId": "716ca8ae2b27a8206719c9a3b90b903e5c707f17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f0a6a1d_1b738cc9",
        "filename": "fuse/opcode.go",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 1007981
      },
      "writtenOn": "2023-01-22T11:52:20Z",
      "side": 1,
      "message": "True, will fix.\n\nHowever, I dug through the kernel source code again, and now I\u0027m unsure if following the libfuse API is the right choice.\n\nIn libfuse, and in this PR, MaxWrite sets max_pages in the background. This controls the WRITE sizes, good. But it also increases the READ sizes as a side effect, which seems ugly. Adding insult to injury, there\u0027s no API to control the READ sizes.\n\nI\u0027m thinking about exposing MaxRead as well. Unfortunately, this gets passed via a mount option string to the kernel (max_read\u003dxxx) and not via INIT.\n\nOr maybe exposing MaxPages directly.",
      "parentUuid": "39295e12_85635fd0",
      "range": {
        "startLine": 147,
        "startChar": 2,
        "endLine": 147,
        "endChar": 46
      },
      "revId": "716ca8ae2b27a8206719c9a3b90b903e5c707f17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0f048c4_57f6301a",
        "filename": "fuse/opcode.go",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-01-22T20:41:42Z",
      "side": 1,
      "message": "\u003eIn libfuse, and in this PR, MaxWrite sets max_pages in the background. This controls the WRITE sizes, good. But it also increases the READ sizes as a side effect, which seems ugly. Adding insult to injury, there\u0027s no API to control the READ sizes.\n\nwhat\u0027s the real intended use of these parameters? For performance oriented FSes, both should be at the max anyway. For resource constrained situations, both should be tuned down. Is there is a use for making one larger, but the other small?",
      "parentUuid": "9f0a6a1d_1b738cc9",
      "range": {
        "startLine": 147,
        "startChar": 2,
        "endLine": 147,
        "endChar": 46
      },
      "revId": "716ca8ae2b27a8206719c9a3b90b903e5c707f17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18c896ad_6ca61249",
        "filename": "fuse/opcode.go",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 1007981
      },
      "writtenOn": "2023-01-22T20:49:41Z",
      "side": 1,
      "message": "I imagined something like cloud storage with different constraints on WRITE and READ, but that\u0027s speculation. I don\u0027t have a use for both being different.\n\nOnly expose MaxWrite until somebody asks for MaxRead, and assume nobody will?",
      "parentUuid": "f0f048c4_57f6301a",
      "range": {
        "startLine": 147,
        "startChar": 2,
        "endLine": 147,
        "endChar": 46
      },
      "revId": "716ca8ae2b27a8206719c9a3b90b903e5c707f17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8098d58e_563b766d",
        "filename": "fuse/opcode.go",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-01-22T21:02:54Z",
      "side": 1,
      "message": "sgtm.",
      "parentUuid": "18c896ad_6ca61249",
      "range": {
        "startLine": 147,
        "startChar": 2,
        "endLine": 147,
        "endChar": 46
      },
      "revId": "716ca8ae2b27a8206719c9a3b90b903e5c707f17",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}