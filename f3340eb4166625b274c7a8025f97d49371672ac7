{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2133537e_78f4b984",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017031
      },
      "writtenOn": "2023-06-17T19:13:40Z",
      "side": 1,
      "message": "Han-Wen, thanks for asking for review. At the high level I think this change is good. I wonder though whether it makes sense to try to use any thirdparty library for ordered map structure.",
      "revId": "f3340eb4166625b274c7a8025f97d49371672ac7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95f33f6d_ec7dec9f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-06-18T10:53:59Z",
      "side": 1,
      "message": "Right now, the strings are duplicated (once in the slice, once in the map). That inefficiency could be removed by using a custom hashmap, but it will be hard to beat the built-in map for performance.",
      "parentUuid": "2133537e_78f4b984",
      "revId": "f3340eb4166625b274c7a8025f97d49371672ac7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de705fa8_c604252d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017031
      },
      "writtenOn": "2023-06-18T12:07:20Z",
      "side": 1,
      "message": "Ok, I see.\n\nFor the reference: I recall that builtin map is optimized for \"very very large maps\":\n\nhttps://github.com/golang/go/issues/19495\nhttps://github.com/golang/go/issues/3885#issuecomment-66068800\n\nwhich is likely not the case list of children.\n\nThis way a custom map can actually beat builtin map on performance for maps, say, not exceeding 10-20K entries.",
      "parentUuid": "95f33f6d_ec7dec9f",
      "revId": "f3340eb4166625b274c7a8025f97d49371672ac7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17476182_107aa919",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-06-18T21:53:29Z",
      "side": 1,
      "message": "interesting reading material, thanks. \n\nWe should start with a benchmark for node operations in go-fuse to avoid pointless optimization.",
      "parentUuid": "de705fa8_c604252d",
      "revId": "f3340eb4166625b274c7a8025f97d49371672ac7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d4aae89_71ce7a11",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017031
      },
      "writtenOn": "2023-06-19T06:21:01Z",
      "side": 1,
      "message": "Thanks, I agree - it makes sense to measure first instead of optimizing or not blindly.",
      "parentUuid": "17476182_107aa919",
      "revId": "f3340eb4166625b274c7a8025f97d49371672ac7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}