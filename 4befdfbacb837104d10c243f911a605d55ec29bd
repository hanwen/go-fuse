{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fb54527a_24a871ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-11-12T16:25:28Z",
      "side": 1,
      "message": "there is a test in loopback_linux_test that has to move to a shared location.",
      "revId": "4befdfbacb837104d10c243f911a605d55ec29bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bcb45b5_f2152743",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1037162
      },
      "writtenOn": "2023-11-13T00:27:03Z",
      "side": 1,
      "message": "Yes, I even tried to do this before submitting the changes, but...\n\n```\n# github.com/hanwen/go-fuse/v2/posixtest\n../posixtest/test.go:54:70: undefined: syscall.O_DIRECT\n../posixtest/test.go:76:37: undefined: syscall.O_DIRECT\n../posixtest/test.go:312:8: v.st.Ctim undefined (type syscall.Stat_t has no field or method Ctim)\n../posixtest/test.go:313:6: st.Ctim undefined (type syscall.Stat_t has no field or method Ctim)\n../posixtest/test.go:610:21: undefined: syscall.Openat\n../posixtest/test.go:627:16: undefined: syscall.Fallocate\n../posixtest/xfstests.go:50:18: undefined: unix.Getdents\n../posixtest/xfstests.go:63:27: d.Off undefined (type *\"golang.org/x/sys/unix\".Dirent has no field or method Off)\n../posixtest/xfstests.go:65:19: d.Off undefined (type *\"golang.org/x/sys/unix\".Dirent has no field or method Off)\n../posixtest/xfstests.go:68:26: d.Off undefined (type *\"golang.org/x/sys/unix\".Dirent has no field or method Off)\n../posixtest/xfstests.go:68:26: too many errors\n```\n\nI\u0027m thinking about the best way to do this. Then I won\u0027t have to manually test my changes.",
      "parentUuid": "fb54527a_24a871ec",
      "revId": "4befdfbacb837104d10c243f911a605d55ec29bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1258927e_deeff660",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1037162
      },
      "writtenOn": "2023-11-13T00:32:17Z",
      "side": 1,
      "message": "Oh, I understand what you mean, you\u0027re not talking about running tests on macos, but that the test now refers to a different file. I\u0027m moving this code.",
      "parentUuid": "5bcb45b5_f2152743",
      "revId": "4befdfbacb837104d10c243f911a605d55ec29bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b50d599c_abd7dc70",
        "filename": "fuse/opcode.go",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-11-12T16:25:28Z",
      "side": 1,
      "message": "this would be incorrect if two mounts negotiate different capability flags. Can you do this in request.parse() instead? _OP_INIT has something similar there too.\n\naside, can you add/update the section in README about OSX support? I don\u0027t have a Mac, so I don\u0027t know the details.",
      "range": {
        "startLine": 151,
        "startChar": 25,
        "endLine": 151,
        "endChar": 34
      },
      "revId": "4befdfbacb837104d10c243f911a605d55ec29bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4d3e5a7_a9baab79",
        "filename": "fuse/opcode.go",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-11-12T16:26:29Z",
      "side": 1,
      "message": "also, the write is race-condition.",
      "parentUuid": "b50d599c_abd7dc70",
      "range": {
        "startLine": 151,
        "startChar": 25,
        "endLine": 151,
        "endChar": 34
      },
      "revId": "4befdfbacb837104d10c243f911a605d55ec29bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1aba9e55_d2ea790c",
        "filename": "fuse/opcode.go",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1037162
      },
      "writtenOn": "2023-11-13T00:01:54Z",
      "side": 1,
      "message": "Thanks for the review. I thought about this, but thought it was an unlikely situation and that it would be better not to pass additional arguments to request.parse(). But now I see that this solution is better.",
      "parentUuid": "b4d3e5a7_a9baab79",
      "range": {
        "startLine": 151,
        "startChar": 25,
        "endLine": 151,
        "endChar": 34
      },
      "revId": "4befdfbacb837104d10c243f911a605d55ec29bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac1a617c_390b956f",
        "filename": "fuse/opcode.go",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1037162
      },
      "writtenOn": "2023-11-13T00:06:15Z",
      "side": 1,
      "message": "Can I update README about OSX support in future merge request – I think I should do some research before this.",
      "parentUuid": "1aba9e55_d2ea790c",
      "range": {
        "startLine": 151,
        "startChar": 25,
        "endLine": 151,
        "endChar": 34
      },
      "revId": "4befdfbacb837104d10c243f911a605d55ec29bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8f9374f_e0ae3874",
        "filename": "fuse/opcode.go",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1037162
      },
      "writtenOn": "2023-11-13T04:18:00Z",
      "side": 1,
      "message": "I checked briefly and it seems that NOTIFY works (and there is code for NOTIFY in the macfuse source code), although the README says that NOTIFY is not supported.\n\nI’ll try to better understand how this should work in order to understand whether this mechanism is supported or not.",
      "parentUuid": "ac1a617c_390b956f",
      "range": {
        "startLine": 151,
        "startChar": 25,
        "endLine": 151,
        "endChar": 34
      },
      "revId": "4befdfbacb837104d10c243f911a605d55ec29bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "087fb66e_5ba14250",
        "filename": "fuse/opcode.go",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1037162
      },
      "writtenOn": "2023-11-13T05:45:41Z",
      "side": 1,
      "message": "Yes, Inode.NotifyEntry works well – without it filesystem caches PersistentInode, with it – cache invalidates.",
      "parentUuid": "a8f9374f_e0ae3874",
      "range": {
        "startLine": 151,
        "startChar": 25,
        "endLine": 151,
        "endChar": 34
      },
      "revId": "4befdfbacb837104d10c243f911a605d55ec29bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d83141fc_6a0541f8",
        "filename": "fuse/server.go",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2023-11-12T16:25:28Z",
      "side": 1,
      "message": "do you have to store this? doesnt kernelSettings contain the same info?",
      "range": {
        "startLine": 78,
        "startChar": 1,
        "endLine": 78,
        "endChar": 14
      },
      "revId": "4befdfbacb837104d10c243f911a605d55ec29bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39326a73_5bc9bc74",
        "filename": "fuse/server.go",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1037162
      },
      "writtenOn": "2023-11-13T00:01:54Z",
      "side": 1,
      "message": "Thanks for the advice, I put this in kernelSettings.",
      "parentUuid": "d83141fc_6a0541f8",
      "range": {
        "startLine": 78,
        "startChar": 1,
        "endLine": 78,
        "endChar": 14
      },
      "revId": "4befdfbacb837104d10c243f911a605d55ec29bd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}