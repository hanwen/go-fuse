{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1e07edb3_7c0de567",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2025-06-11T06:21:32Z",
      "side": 1,
      "message": "I like that this change was motivated by numbers, but for me to accept a change, I have to be able to replicate these numbers, and the replication should be self-contained. Can you make a benchmark (eg. under benchmark/ ) that shows the problem? Information about x86 vs ARM is useful. I normally develop on x86, but I can spin up ARM64 if necessary.",
      "revId": "7f214c38ae2aa42f747caa6afe2c51abbda387e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74d23a86_50aabc11",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1007980
      },
      "writtenOn": "2025-06-11T06:21:32Z",
      "side": 1,
      "message": "it makes the logic simple, but if your file system is network backed, requests can take arbitarily long to finish. So if you have a multithreaded load on the FS with MaxLoopNum parallel requests, and there is a network hiccup, then nothing is serving the FUSE device, and all further access to the filesystem will hang. This is not acceptable.",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 36,
        "endChar": 28
      },
      "revId": "7f214c38ae2aa42f747caa6afe2c51abbda387e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}